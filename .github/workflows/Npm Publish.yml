name: Npm Publish
on:
  push:
    branches:
      - main
    paths:
      - packages/**/package.json

jobs:
  npm-publish:
    name: npm publish
    strategy:
      matrix:
        os: [ubuntu-latest]
        include:
          - package: './build/packages/gimit' 
        node: [16]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install node.js v16
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Back to home directory
        run: cd ../..

      - name: Install dependencies
        run: npm install --save-dev

      - name: Build dependencies
        run: npm run build

      - name: Setting up readme
        run: cp -r packages/${{ matrix.package }}/README.md build/packages/${{ matrix.package }}/README.md

      - name: Setting up .npmignore
        run: |
          echo "node_modules" >> build/packages/${{ matrix.package }}/.npmignore
          echo ".env" >> build/packages/${{ matrix.package }}/.npmignore
          echo "__test__" >> build/packages/${{ matrix.package }}/.npmignore
          echo "package-lock.json" >> build/packages/${{ matrix.package }}/.npmignore
          # excluding ts files
          echo "*.ts" >> build/packages/${{ matrix.package }}/.npmignore
          echo "src/*.ts" >> build/packages/${{ matrix.package }}/.npmignore
          echo "src/**/*.ts" >> build/packages/${{ matrix.package }}/.npmignore
          # !excluding typings files
          echo "!*.d.ts" >> build/packages/${{ matrix.package }}/.npmignore
          echo "!src/*.d.ts" >> build/packages/${{ matrix.package }}/.npmignore
          echo "!src/**/*.d.ts" >> build/packages/${{ matrix.package }}/.npmignore

        #run: cp -r packages/${{ matrix.package }}/.npmignore build/packages/${{ matrix.package }}/.npmignore 
      
      - name: Publish Package
        run: npm publish ${{ matrix.package }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
